@use '../../styles/mixins/breakpoints' as breakpoints;
@use '../../styles/mixins/state' as state;
@use '../../styles/mixins/typography' as typography;
@use '../../styles/tokens/radii' as radii;
@use '../../styles/tokens/spacing' as spacing;

@keyframes mode-card-spin {
  to {
    transform: rotate(360deg);
  }
}

.card {
  display: flex;
  flex-direction: column;
  gap: spacing.spacing('space-3');
  height: 100%;
  padding: spacing.spacing('space-5');
  color: var(--muted-foreground);
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: var(--radius-xl);
  transition:
    background-color 160ms ease,
    border-color 160ms ease,
    color 160ms ease,
    box-shadow 160ms ease;

  @include breakpoints.respond('sm') {
    padding: spacing.spacing('space-6');
  }
}

.header {
  display: flex;
  align-items: center;
  gap: spacing.spacing('space-3');
}

.icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  inline-size: 2rem;
  block-size: 2rem;
  border-radius: radii.radius('xl');
  border: 1px solid color-mix(in oklch, var(--border) 85%, transparent);
  background: color-mix(in oklch, var(--muted) 85%, transparent);
  color: var(--muted-foreground);

  :global(svg) {
    inline-size: 1.25rem;
    block-size: 1.25rem;
  }
}

.title {
  @include typography.heading('heading-sm');
  color: var(--card-foreground);
  line-height: 1.2;
}

.description {
  @include typography.body('body-sm');
  color: var(--muted-foreground);
  margin-top: spacing.spacing('space-1');
}

.actions {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: spacing.spacing('space-3');
  margin-top: spacing.spacing('space-3');
}

.secondaryAction {
  display: inline-flex;
  align-items: center;
  gap: spacing.spacing('space-1');
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--primary);
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  text-decoration: none;
  text-underline-offset: 0.25rem;
  outline: none;
  @include state.transition-colors();

  &:hover {
    color: var(--primary-foreground);
    text-decoration: underline;
  }

  &:focus-visible {
    @include state.focus-ring(var(--primary));
  }

  &[aria-disabled='true'] {
    @include state.disabled;
    cursor: not-allowed;
  }

  :global(svg) {
    inline-size: 1rem;
    block-size: 1rem;
  }
}

.secondaryActionPending {
  opacity: 0.7;
}

.spinner {
  inline-size: 1rem;
  block-size: 1rem;
  animation: mode-card-spin 0.8s linear infinite;
}
