@use '../../styles/mixins/typography' as typography;
@use '../../styles/mixins/state' as state;
@use '../../styles/tokens/spacing' as spacing;

$shadow-xs: 0 1px 2px rgba(15, 23, 42, 0.1);

.button {
  @include typography.body('body-sm');
  font-weight: 500;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: spacing.spacing('space-2');
  min-height: 2.25rem;
  padding-block: spacing.spacing('space-2');
  padding-inline: spacing.spacing('space-4');
  border: 1px solid transparent;
  border-radius: var(--radius-md);
  background: var(--primary);
  color: var(--primary-foreground);
  white-space: nowrap;
  text-decoration: none;
  @include state.transition-colors();
  box-shadow: var(--shadow-xs, #{$shadow-xs});
  outline: none;

  &:not(:disabled) {
    cursor: pointer;
  }

  &:focus-visible {
    @include state.focus-ring(var(--ring));
    border-color: var(--ring);
  }

  &[aria-invalid='true'] {
    border-color: var(--destructive);
  }

  &[aria-invalid='true']:focus-visible {
    @include state.focus-ring(var(--destructive));
    border-color: var(--destructive);
  }

  &:disabled {
    @include state.disabled;
    background: color-mix(in oklch, var(--primary) 55%, transparent);
    color: color-mix(in oklch, var(--primary-foreground) 70%, var(--primary) 30%);
    box-shadow: none;
  }

  :global(svg) {
    pointer-events: none;
    flex-shrink: 0;
  }

  :global(svg:not([class*='size-'])) {
    inline-size: 1rem;
    block-size: 1rem;
  }

  &[data-variant='default'] {
    background: var(--primary);
    color: var(--primary-foreground);

    &:hover:not(:disabled) {
      background: color-mix(in oklch, var(--primary) 88%, var(--foreground) 12%);
    }
  }

  &[data-variant='destructive'] {
    background: var(--destructive);
    color: var(--destructive-foreground);

    &:hover:not(:disabled) {
      background: color-mix(in oklch, var(--destructive) 88%, black 12%);
    }

    &:focus-visible {
      @include state.focus-ring(var(--destructive));
    }
  }

  &[data-variant='outline'] {
    background: var(--background);
    color: var(--foreground);
    border-color: var(--border);
    box-shadow: var(--shadow-xs, #{$shadow-xs});

    &:hover:not(:disabled) {
      background: color-mix(in oklch, var(--accent) 40%, transparent);
      color: var(--accent-foreground);
    }
  }

  &[data-variant='secondary'] {
    background: var(--secondary);
    color: var(--secondary-foreground);
    box-shadow: var(--shadow-xs, #{$shadow-xs});

    &:hover:not(:disabled) {
      background: color-mix(in oklch, var(--secondary) 85%, var(--foreground) 15%);
    }
  }

  &[data-variant='ghost'] {
    background: transparent;
    color: inherit;
    border-color: transparent;
    box-shadow: none;

    &:hover:not(:disabled) {
      background: color-mix(in oklch, var(--accent) 25%, transparent);
      color: var(--accent-foreground);
    }
  }

  &[data-variant='link'] {
    background: transparent;
    border-color: transparent;
    color: var(--primary);
    text-decoration: none;
    text-underline-offset: 0.25rem;

    &:hover:not(:disabled) {
      text-decoration: underline;
    }
  }

  &[data-size='sm'] {
    min-height: 2rem;
    padding-block: spacing.spacing('space-1');
    padding-inline: spacing.spacing('space-3');
    border-radius: var(--radius-sm);
    gap: 0.375rem;

    &:has(> :global(svg)) {
      padding-inline: 0.625rem;
    }
  }

  &[data-size='lg'] {
    min-height: 2.5rem;
    padding-inline: spacing.spacing('space-6');
    border-radius: var(--radius-lg);

    &:has(> :global(svg)) {
      padding-inline: spacing.spacing('space-4');
    }
  }

  &[data-size='icon'] {
    inline-size: 2.25rem;
    block-size: 2.25rem;
    padding: 0;
    border-radius: var(--radius-md);
  }

  &[data-size='default'] {
    &:has(> :global(svg)) {
      padding-inline: spacing.spacing('space-3');
    }
  }
}
