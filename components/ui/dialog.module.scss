@use '../../styles/mixins/breakpoints' as breakpoints;
@use '../../styles/mixins/layout' as layout;
@use '../../styles/mixins/state' as state;
@use '../../styles/mixins/typography' as typography;
@use '../../styles/tokens/spacing' as spacing;

$shadow-lg:
  0 22px 45px -28px rgba(15, 23, 42, 0.45),
  0 12px 32px -24px rgba(15, 23, 42, 0.35);
$overlay-bg: rgba(15, 23, 42, 0.55);

@keyframes dialog-overlay-show {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes dialog-overlay-hide {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes dialog-content-show {
  from {
    opacity: 0;
    transform: translate(-50%, -52%) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

@keyframes dialog-content-hide {
  from {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  to {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }
}

.dialogOverlay {
  position: fixed;
  inset: 0;
  z-index: 50;
  background: $overlay-bg;
  backdrop-filter: blur(2px);
  &[data-state='open'] {
    animation: dialog-overlay-show 140ms ease-out forwards;
  }
  &[data-state='closed'] {
    animation: dialog-overlay-hide 110ms ease-in forwards;
  }
}

.dialogContent {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 60;
  display: grid;
  gap: spacing.spacing('space-4');
  inline-size: min(32rem, calc(100% - 2rem));
  max-inline-size: 32rem;
  padding: spacing.spacing('space-6');
  background: var(--color-background);
  color: var(--color-foreground);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-lg, #{$shadow-lg});
  outline: none;
  isolation: isolate;
  transition:
    opacity 150ms ease,
    transform 200ms ease;

  &[data-state='open'] {
    animation: dialog-content-show 180ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
  }

  &[data-state='closed'] {
    animation: dialog-content-hide 120ms cubic-bezier(0.7, 0, 0.84, 0) forwards;
  }
}

.dialogHeader {
  @include layout.stack('space-2');
  text-align: center;

  @include breakpoints.respond(sm) {
    text-align: left;
  }
}

.dialogFooter {
  display: flex;
  flex-direction: column-reverse;
  gap: spacing.spacing('space-2');

  @include breakpoints.respond(sm) {
    flex-direction: row;
    justify-content: flex-end;
  }
}

.dialogTitle {
  @include typography.heading('heading-sm');
  margin: 0;
  line-height: 1.1;
  color: inherit;
}

.dialogDescription {
  @include typography.body('body-sm');
  margin: 0;
  color: var(--color-muted-foreground);
}

.closeButton {
  position: absolute;
  top: spacing.spacing('space-4');
  right: spacing.spacing('space-4');
  display: inline-flex;
  align-items: center;
  justify-content: center;
  inline-size: 1.75rem;
  block-size: 1.75rem;
  border: none;
  border-radius: var(--radius-xs);
  background: transparent;
  color: color-mix(in oklch, currentColor 70%, transparent);
  opacity: 0.7;
  @include state.transition-colors;

  &:hover {
    opacity: 1;
    color: currentColor;
  }

  &:focus-visible {
    @include state.focus-ring(var(--color-ring));
    outline-offset: 2px;
  }

  &:disabled,
  &[aria-disabled='true'] {
    opacity: 0.45;
    pointer-events: none;
  }

  &[data-state='open'] {
    background: var(--color-accent);
    color: var(--color-muted-foreground);
  }

  :global(svg) {
    pointer-events: none;
    inline-size: 1rem;
    block-size: 1rem;
  }
}

.visuallyHidden {
  position: absolute;
  inline-size: 1px;
  block-size: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  clip-path: inset(50%);
  border: 0;
  white-space: nowrap;
}
