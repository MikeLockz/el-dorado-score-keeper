@use '../../styles/mixins/typography' as typography;
@use '../../styles/tokens/spacing' as spacing;

.container {
  max-inline-size: 64rem;
  margin-inline: auto;
  padding: spacing.spacing('space-5') spacing.spacing('space-4');
  display: flex;
  flex-direction: column;
  gap: spacing.spacing('space-4');
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  flex-wrap: wrap;
  gap: spacing.spacing('space-3');
}

.title {
  @include typography.heading('heading-sm');
  font-weight: 700;
}

.description {
  @include typography.body('body-sm');
  color: var(--color-muted-foreground);
  max-inline-size: 38ch;
}

.headerActions {
  display: flex;
  flex-wrap: wrap;
  gap: spacing.spacing('space-2');
}

.spinner {
  inline-size: 1rem;
  block-size: 1rem;
  margin-inline-end: spacing.spacing('space-1');
  animation: spin 0.9s linear infinite;
}

.error {
  border-radius: var(--radius-md);
  background: color-mix(in oklch, var(--color-destructive) 15%, transparent);
  color: var(--color-destructive-foreground);
  padding: spacing.spacing('space-3');
  @include typography.body('body-sm');
}

.currentCard {
  display: flex;
  flex-direction: column;
}

.currentContent {
  display: flex;
  flex-direction: column;
  gap: spacing.spacing('space-2');
}

.currentHeader {
  display: flex;
  flex-direction: column;
  gap: spacing.spacing('space-1');
}

.sectionTitle {
  @include typography.heading('heading-sm');
  font-weight: 600;
}

.sectionSubtitle {
  @include typography.body('body-sm');
  color: var(--color-muted-foreground);
}

.currentMeta {
  display: flex;
  flex-wrap: wrap;
  gap: spacing.spacing('space-2');
}

.metaItem {
  display: inline-flex;
  align-items: center;
  gap: spacing.spacing('space-1');
  color: var(--color-muted-foreground);
  @include typography.body('body-xs');
}

.metaIcon {
  inline-size: 1rem;
  block-size: 1rem;
}

.currentActions {
  display: flex;
  flex-wrap: wrap;
  gap: spacing.spacing('space-2');
}

.currentEmpty {
  border-radius: var(--radius-md);
  border: 1px dashed color-mix(in oklch, var(--color-border) 60%, transparent);
  padding: spacing.spacing('space-4');
  display: flex;
  flex-direction: column;
  gap: spacing.spacing('space-2');
}

.listSection {
  display: flex;
  flex-direction: column;
  gap: spacing.spacing('space-3');
}

.sectionHeader {
  display: flex;
  flex-direction: column;
  gap: spacing.spacing('space-1');
}

.list {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
  gap: spacing.spacing('space-3');
}

.cardContent {
  display: flex;
  flex-direction: column;
  gap: spacing.spacing('space-2');
  padding: spacing.spacing('space-3');
}

.gameCard {
  display: flex;
  flex-direction: column;
  min-block-size: 14rem;
}

.gameHeader {
  display: flex;
  flex-direction: column;
  gap: spacing.spacing('space-1');
}

.gameTitle {
  font-weight: 600;
  color: var(--color-foreground);
  @include typography.body('body-md');
}

.gameMeta {
  display: flex;
  flex-wrap: wrap;
  gap: spacing.spacing('space-2');
  @include typography.body('body-xs');
  color: var(--color-muted-foreground);
}

.gameSummary {
  margin-block-start: spacing.spacing('space-1');
  display: inline-flex;
  align-items: center;
  gap: spacing.spacing('space-1');
  color: var(--color-muted-foreground);
  @include typography.body('body-sm');
  &[role='button'] {
    cursor: pointer;
  }
  &[aria-disabled='true'] {
    cursor: not-allowed;
  }
}

.gameFooter {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: spacing.spacing('space-2');
  padding: spacing.spacing('space-3');
  border-block-start: 1px solid color-mix(in oklch, var(--color-border) 80%, transparent);
  flex-wrap: wrap;
}

.titleSkeleton {
  inline-size: 60%;
  block-size: 1.25rem;
}

.metaSkeleton {
  inline-size: 40%;
  block-size: 0.875rem;
}

.buttonSkeleton {
  inline-size: 7.5rem;
  block-size: 2.25rem;
}

.linkSkeleton {
  inline-size: 6rem;
  block-size: 1.5rem;
}

.empty {
  padding: spacing.spacing('space-4');
  border-radius: var(--radius-md);
  border: 1px dashed color-mix(in oklch, var(--color-border) 60%, transparent);
  text-align: center;
  @include typography.body('body-sm');
  color: var(--color-muted-foreground);
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
